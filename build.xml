<?xml version="1.0" encoding="UTF-8"?>

<project name="Samplehibtest" default="dist" basedir=".">
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  
  <path id="classpath">
 		 <fileset dir="../../Downloads/jars-lib">
  		  <include name="*.jar" />
 		 </fileset>
	</path>

  <pathconvert property="classpath.name" pathsep=" ">
    <path refid="classpath" />
    <mapper>
      <chainedmapper>
        <flattenmapper />
        <globmapper from="*.jar" to="lib/*.jar" />
      </chainedmapper>
    </mapper>
  </pathconvert>


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <echo>=== COMPILE ===</echo>

  <echo>Compiling ${src} files ...</echo>
  
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}" classpathref="classpath"/>
    
  </target>

    <target name="copy-resources">
    <mkdir dir="${dist}/lib"/>
  
  <copy todir="${dist}">
    <fileset dir="${src}" includes="*.xml" excludes="*.java" />
  </copy>
  <copy todir="${dist}/lib">
    <fileset dir="../../Downloads/jars-lib" includes="*.jar" excludes="*.js" />
  </copy>
  
  </target> 

  <target name="dist" depends="compile , copy-resources"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/Samplehibtest-${DSTAMP}.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="com.samplehibtest.boot.Appboot" />
        <attribute name="Class-Path" value="${classpath.name}" />
      </manifest>	
    </jar>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
